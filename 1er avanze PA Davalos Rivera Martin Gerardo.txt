lista = []

while True:
    print("\nSeleccione una opción:")
    print("1. Agregar elemento")
    print("2. Modificar elemento")
    print("3. Mostrar lista")
    print("4. Buscar elemento")
    print("5. Salir")

    opcion = input("Ingrese la opción deseada: ")

    if opcion == "1":
        elemento = input("Ingrese el elemento a agregar: ")
        lista.append(elemento)
        print("El elemento ha sido agregado a la lista.")

    elif opcion == "2":
        if len(lista) == 0:
            print("La lista está vacía.")
        else:
            print("La lista actual es:")
            print(lista)
            indice = int(input("Ingrese el índice del elemento a modificar: "))
            if indice >= len(lista) or indice < 0:
                print("Índice inválido.")
            else:
                nuevo_elemento = input("Ingrese el nuevo elemento: ")
                lista[indice] = nuevo_elemento
                print("El elemento ha sido modificado.")

    elif opcion == "3":
        if len(lista) == 0:
            print("La lista está vacía.")
        else:
            print("La lista actual es:")
            print(lista)

    elif opcion == "4":
        if len(lista) == 0:
            print("La lista está vacía.")
        else:
            elemento = input("Ingrese el elemento a buscar: ")
            if elemento in lista:
                print("El elemento se encuentra en la lista.")
            else:
                print("El elemento no se encuentra en la lista.")

    elif opcion == "5":
        print("¡Hasta luego!")
        break

    else:
        print("Opción inválida. Intente nuevamente.")
Este programa utiliza un ciclo while que se ejecuta continuamente hasta que el usuario selecciona la opción "Salir" (opción 5). Las opciones disponibles se imprimen en pantalla utilizando la función print(). El usuario ingresa la opción deseada utilizando la función input().

Para cada opción, se utiliza una estructura if-elif-else que verifica qué opción ha sido seleccionada. Si se selecciona la opción "Agregar elemento" (opción 1), se utiliza la función append() para agregar el elemento ingresado por el usuario a la lista. Si se selecciona la opción "Modificar elemento" (opción 2), se muestra la lista actual y se solicita al usuario que ingrese el índice del elemento a modificar. Luego, se utiliza el operador de índice para modificar el elemento correspondiente en la lista. Si se selecciona la opción "Mostrar lista" (opción 3), se muestra la lista actual utilizando la función print(). Si se selecciona la opción "Buscar elemento" (opción 4), se solicita al usuario que ingrese el elemento a buscar y se utiliza la palabra clave in para verificar si el elemento se encuentra en la lista. Si se selecciona la opción "Salir" (opción 5), se imprime un mensaje de despedida y se utiliza la palabra clave break para salir del ciclo while. Si se ingresa una opción inválida, se imprime un mensaje de error.

import pickle

class Entidad:
    def __init__(self, id, nombre, descripcion):
        self.id = id
        self.nombre = nombre
        self.descripcion = descripcion

    def __str__(self):
        return f"ID: {self.id}, Nombre: {self.nombre}, Descripción: {self.descripcion}"

class ManejadorEntidades:
    def __init__(self):
        self.entidades = []

    def alta(self, id, nombre, descripcion):
        entidad = Entidad(id, nombre, descripcion)
        self.entidades.append(entidad)
        print("La entidad ha sido dada de alta.")

    def baja(self, id):
        for entidad in self.entidades:
            if entidad.id == id:
                self.entidades.remove(entidad)
                print("La entidad ha sido dada de baja.")
                return
        print("No se encontró ninguna entidad con ese ID.")

    def modificar(self, id, nombre, descripcion):
        for entidad in self.entidades:
            if entidad.id == id:
                entidad.nombre = nombre
                entidad.descripcion = descripcion
                print("La entidad ha sido modificada.")
                return
        print("No se encontró ninguna entidad con ese ID.")

    def buscar(self, id):
        for entidad in self.entidades:
            if entidad.id == id:
                print(entidad)
                return
        print("No se encontró ninguna entidad con ese ID.")

    def guardar(self, archivo):
        with open(archivo, "wb") as f:
            pickle.dump(self.entidades, f)
        print("Las entidades han sido guardadas en el archivo binario.")

    def cargar(self, archivo):
        try:
            with open(archivo, "rb") as f:
                self.entidades = pickle.load(f)
            print("Las entidades han sido cargadas del archivo binario.")
        except FileNotFoundError:
            print("El archivo no existe.")

manejador = ManejadorEntidades()

while True:
    print("\nSeleccione una opción:")
    print("1. Dar de alta una entidad")
    print("2. Dar de baja una entidad")
    print("3. Modificar una entidad")
    print("4. Buscar una entidad")
    print("5. Guardar las entidades en un archivo binario")
    print("6. Cargar las entidades de un archivo binario")
    print("7. Salir")

    opcion = input("Ingrese la opción deseada: ")

    if opcion == "1":
        id = int(input("Ingrese el ID de la entidad: "))
        nombre = input("Ingrese el nombre de la entidad: ")
        descripcion = input("Ingrese la descripción de la entidad: ")
        manejador.alta(id, nombre, descripcion)

    elif opcion == "2":
        id = int(input("Ingrese el ID de la entidad a dar de baja: "))
        manejador.baja(id)

    elif opcion == "3":
        id = int(input("Ingrese el ID de la entidad a modificar: "))
        nombre = input("Ingrese el nuevo nombre de la entidad: ")
        descripcion = input("Ingrese la nueva descripción de la entidad: ")
        manejador.modificar(id, nombre, descripcion)

    elif opcion == "4":
        id = int(input("Ingrese el ID de la entidad a buscar: "))
        man






